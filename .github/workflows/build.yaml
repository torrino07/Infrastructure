name: Build Infrastructure AWS

on:
  pull_request:
    branches:
      - dev
      - main
    types:
      - opened
  workflow_call:
    inputs:
      region:
        description: 'Target region'
        required: true
        default: 'us-east-1'
        type: string
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: string
  workflow_dispatch:
    inputs:
      region:
        description: 'Target region'
        required: true
        default: 'us-east-1'
        type: choice
        options:
          - us-east-1
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ github.ref_name == 'dev' && secrets.AWS_ACCOUNT_ID_DEV || github.ref_name == 'staging' && secrets.AWS_ACCOUNT_ID_STAGING  || secrets.AWS_ACCOUNT_ID_PROD }}
  AWS_REGION: ${{ github.event.inputs.region }}
  ARTIFACT: terraform

jobs:
  ci:
    name: ci
    runs-on: ${{ vars.RUNNER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lint code
        run: echo "lint"

      - name: Test code
        run: echo "test"

      - name: compress
        run: |
          mkdir -p dist
          zip -r ${{ env.ARTIFACT }}.zip ${{ env.ARTIFACT }}
          mv ${{ env.ARTIFACT }}.zip dist/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: dist/*

  cd:
    name: cd
    if: ${{ github.ref_name == 'dev' || github.ref_name == 'main'}}
    needs: ci
    runs-on: ${{ vars.RUNNER }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: dist

      - name: Test
        run: |
          ls
          cd dist
          ls

      # - name: Configure Environment
      #   run: echo "Deploying to ${{ github.ref_name }} environment from ${{ github.ref_name }} branch"

      # - name: Run Terraform Init
      #   working-directory: terraform
      #   run: |
      #     terraform init \
      #       -backend-config="region=${{ env.AWS_REGION }}" \
      #       -backend-config="bucket=terraformstate001-${{ github.ref_name }}" \
      #       -backend-config="key=${{ github.ref_name }}/terraform.tfstate" \
      #       -backend-config="dynamodb_table=terraform-locks-${{ github.ref_name }}"

      # - name: Select or Create Workspace
      #   working-directory: terraform
      #   run: |
      #     terraform workspace select ${{ github.ref_name }} || terraform workspace new ${{ github.ref_name }}

      # - name: Run Plan
      #   working-directory: terraform
      #   run: |
      #     terraform plan -var-file="environments/${{ github.ref_name }}/terraform.tfvars" -out=${{ github.ref_name }}-plan.out

      # - name: Run Apply
      #   working-directory: terraform
      #   run: |
      #     terraform apply ${{ github.ref_name }}-plan.out