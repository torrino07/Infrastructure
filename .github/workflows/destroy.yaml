name: Destroy Infrastructure AWS

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'Target region'
        required: true
        default: 'us-east-1'
        type: choice
        options:
          - us-east-1
      certs:
        description: Certs
        required: true
        default: v0.1.1
        type: string

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ github.event.inputs.region }}
  ENVIRONMENT: ${{ github.ref_name == 'dev' && 'dev' || github.ref_name == 'staging' && 'staging'  || 'prod' }}

jobs:
  destroy:
    name: Destroy Infra
    runs-on: ${{ vars.RUNNER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name:  Get Release Asset ID
        id: get_release
        run: |
          release_data=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            https://api.github.com/repos/${{ github.actor }}/certs/releases/tags/${{ github.event.inputs.certs }})

          asset_id=$(echo "$release_data" | jq -r '.assets[] | select(.name == "certs.zip") | .id')
          echo "asset_id=$asset_id" >> $GITHUB_OUTPUT

      - name: Download Artifact
        run: |
          curl -L \
            -H "Accept: application/octet-stream" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            "https://api.github.com/repos/${{ github.actor }}/certs/releases/assets/${{ steps.get_release.outputs.asset_id }}" \
            -o certs.zip
      
      - name: Unzip Artifact
        run: |
          unzip certs.zip
          ls
      
      - name: Configure Environment
        run: echo "Deploying to ${{ env.ENVIRONMENT }} environment from ${{ github.ref_name }} branch"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6
      
      - name: Run Terraform Init
        working-directory: terraform
        run: |
          echo ${{ env.AWS_REGION }}
          terraform init \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="bucket=terraformstate001-${{ env.ENVIRONMENT }}" \
            -backend-config="key=${{ env.ENVIRONMENT }}/terraform.tfstate" \
            -backend-config="dynamodb_table=terraform-locks-${{ env.ENVIRONMENT }}"

      - name: Select or Create Workspace
        working-directory: terraform
        run: |
          terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}

      - name: Destroy
        working-directory: terraform
        id: destroy
        run: |
          terraform destroy -auto-approve
      
